{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iLene\\\\Downloads\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, useLoaderData } from \"react-router\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loaderEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loaderEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({\n      message: \"Events out\"\n    }, {\n      status: 500\n    });\n  } else {\n    console.log(\"events ok\");\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","defer","json","useLoaderData","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","children","resolve","loaderEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","console","log","loader","$RefreshReg$"],"sources":["C:/Users/iLene/Downloads/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { Await, defer, json, useLoaderData } from \"react-router\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Suspense } from \"react\";\r\n\r\nfunction EventsPage() {\r\n  const { events } = useLoaderData();\r\n\r\n  return (\r\n    <Suspense>\r\n      <Await resolve={events}>\r\n        {(loaderEvents) => <EventsList events={loaderEvents} />}\r\n      </Await>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Events out\" }, { status: 500 });\r\n  } else {\r\n    console.log(\"events ok\");\r\n    return response;\r\n  }\r\n}\r\n\r\nexport function loader() {\r\n  return defer({\r\n    events: loadEvents(),\r\n  });\r\n}\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,cAAc;AAChE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGP,aAAa,CAAC,CAAC;EAElC,oBACEI,OAAA,CAACF,QAAQ;IAAAM,QAAA,eACPJ,OAAA,CAACP,KAAK;MAACY,OAAO,EAAEF,MAAO;MAAAC,QAAA,EACnBE,YAAY,iBAAKN,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACR,EAAA,CAVQD,UAAU;EAAA,QACEL,aAAa;AAAA;AAAAe,EAAA,GADzBV,UAAU;AAYnB,eAAeA,UAAU;AAEzB,eAAeW,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAAa,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACxD,CAAC,MAAM;IACLC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,OAAON,QAAQ;EACjB;AACF;AAEA,OAAO,SAASO,MAAMA,CAAA,EAAG;EACvB,OAAO1B,KAAK,CAAC;IACXS,MAAM,EAAES,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}